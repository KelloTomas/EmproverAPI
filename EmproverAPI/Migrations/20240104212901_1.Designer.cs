// <auto-generated />
using System;
using EmproverAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmproverAPI.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20240104212901_1")]
    partial class _1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmproverAPI.Models.AllowedValues", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Key"));

                    b.Property<string>("IndicatorParameterName")
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Key");

                    b.HasIndex("IndicatorParameterName");

                    b.ToTable("AllowedValues");
                });

            modelBuilder.Entity("EmproverAPI.Models.DayStatistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuySellVolume")
                        .HasColumnType("int");

                    b.Property<int>("Kapitalizacia")
                        .HasColumnType("int");

                    b.Property<int>("PointId")
                        .HasColumnType("int");

                    b.Property<string>("SymbolCode")
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("PointId");

                    b.HasIndex("SymbolCode");

                    b.ToTable("DayStatistics");
                });

            modelBuilder.Entity("EmproverAPI.Models.Indicator", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("DisplayType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Code");

                    b.ToTable("Indicators");
                });

            modelBuilder.Entity("EmproverAPI.Models.IndicatorParameter", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal?>("DefaultValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("DisplayType")
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("IndicatorCode")
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal?>("MaxValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("MinValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ParameterType")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.HasIndex("IndicatorCode");

                    b.ToTable("IndicatorParameter");
                });

            modelBuilder.Entity("EmproverAPI.Models.Point", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CloseValue")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxValue")
                        .HasColumnType("int");

                    b.Property<int>("MinValue")
                        .HasColumnType("int");

                    b.Property<int>("OpenValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Points");
                });

            modelBuilder.Entity("EmproverAPI.Models.Symbol", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Code");

                    b.ToTable("Symbols");
                });

            modelBuilder.Entity("EmproverAPI.Models.User", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Permissions")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EmproverAPI.Models.AllowedValues", b =>
                {
                    b.HasOne("EmproverAPI.Models.IndicatorParameter", null)
                        .WithMany("AllowedValues")
                        .HasForeignKey("IndicatorParameterName");
                });

            modelBuilder.Entity("EmproverAPI.Models.DayStatistics", b =>
                {
                    b.HasOne("EmproverAPI.Models.Point", "Point")
                        .WithMany()
                        .HasForeignKey("PointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmproverAPI.Models.Symbol", null)
                        .WithMany("DayStatistics")
                        .HasForeignKey("SymbolCode");

                    b.Navigation("Point");
                });

            modelBuilder.Entity("EmproverAPI.Models.IndicatorParameter", b =>
                {
                    b.HasOne("EmproverAPI.Models.Indicator", null)
                        .WithMany("IndicatorParameters")
                        .HasForeignKey("IndicatorCode");
                });

            modelBuilder.Entity("EmproverAPI.Models.Indicator", b =>
                {
                    b.Navigation("IndicatorParameters");
                });

            modelBuilder.Entity("EmproverAPI.Models.IndicatorParameter", b =>
                {
                    b.Navigation("AllowedValues");
                });

            modelBuilder.Entity("EmproverAPI.Models.Symbol", b =>
                {
                    b.Navigation("DayStatistics");
                });
#pragma warning restore 612, 618
        }
    }
}
